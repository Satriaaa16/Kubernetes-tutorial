name: CI Minikube Workload Only

on:
  pull_request:
    branches: [ "master" ]

jobs:
  job1:
    runs-on: ubuntu-latest
    name: Build and deploy workloads + ConfigMap to Minikube
    steps:
      - name: Checkout current PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Start Minikube
        uses: medyagh/setup-minikube@latest

      - name: Test cluster up
        run: kubectl get nodes -o wide

      - name: Clone repo berisi manifest
        run: git clone https://github.com/Satriaaa16/Kubernetes-tutorial.git

      - name: Install yq (YAML processor)
        run: sudo snap install yq

      - name: Buat namespace monitoring & devops
        run: |
          kubectl create ns monitoring || true
          kubectl create ns devops || true

      - name: Deploy workload + ConfigMap (skip template dir)
        run: |
          # Cari file YAML tapi skip direktori belajar/template
          for file in $(find Kubernetes-tutorial/ -type f \( -name "*.yaml" -o -name "*.yml" \) ! -path "*/belajar/template/*"); do
            echo "üîé Checking $file"
            # filter hanya kind tertentu
            count=$(yq e 'select(.kind == "Deployment" or 
                                .kind == "StatefulSet" or 
                                .kind == "DaemonSet" or 
                                .kind == "Job" or 
                                .kind == "CronJob" or 
                                .kind == "ReplicaSet" or 
                                .kind == "ConfigMap") | length' "$file" 2>/dev/null | wc -l)

            if [ "$count" -gt 0 ]; then
              echo "‚úÖ Applying workloads from $file"
              yq e 'select(.kind == "Deployment" or 
                           .kind == "StatefulSet" or 
                           .kind == "DaemonSet" or 
                           .kind == "Job" or 
                           .kind == "CronJob" or 
                           .kind == "ReplicaSet" or 
                           .kind == "ConfigMap")' "$file" 2>/dev/null | kubectl apply -f - || true
            else
              echo "‚è≠Ô∏è Skipping $file (not workload/ConfigMap)"
            fi
          done

      - name: Tunggu workload siap (max 60s)
        run: |
          kubectl wait --for=condition=available deployment --all --all-namespaces --timeout=60s || true
          kubectl wait --for=condition=ready pod --all --all-namespaces --timeout=60s || true
          kubectl get all --all-namespaces
