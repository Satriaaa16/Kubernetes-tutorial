apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-prome
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prome-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prome-deployment 
  template:
    metadata:
      labels:
        app: prome-deployment
    spec:
      containers:
        - name: container-prome
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus-config/prometheus.yml"
          ports:
            - containerPort: 9090
          livenessProbe:
            httpGet: 
              path: /
              port: 9090
            initialDelaySeconds: 3
            periodSeconds: 5
            #  failureThreshold: 10
            #  successThreshold: 3
            #  timeoutSeconds: 5
          volumeMounts:
            - name: promeprome-data
              mountPath: /etc/prometheus
            - name: config
              mountPath: /etc/prometheus-config/prometheus.yml
              subPath: prometheus.yml
      volumes:
        - name: promeprome-data
          persistentVolumeClaim:
            claimName: pvc-prome
        - name: config
          configMap:
            name: prometheus-server-conf

---

apiVersion: v1
kind: Service
metadata:
  name: prome-svc
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: prome-deployment
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30090

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-prome
  namespace: monitoring
  labels:
    name: ingress-prome
spec:
  ingressClassName: nginx
  rules:
    - host: monitoring.alan.computer.my.id
      http:
        paths:
          - path: /
            pathType: Prefix
            backend: 
              service:
                name: prome-svc
                port:
                  number: 9090
